{"version":3,"sources":["gameHelpers.js","components/styles/StyledTetris.js","tetrominos.js","hooks/useStage.js","components/styles/StyledCell.js","components/Cell.js","components/styles/StyledStage.js","components/Stage.js","components/styles/StyledDisplay.js","components/Display.js","components/styles/StyledStartButton.js","components/StartButton.js","components/Tetris.js","hooks/usePlayer.js","hooks/useGameStatus.js","hooks/useInterval.js","App.js","index.js"],"names":["createStage","Array","from","fill","checkCollision","player","stage","moveX","x","moveY","y","tetromino","length","pos","StyledTetrisWrapper","styled","div","StyledTetris","TETROMINOS","0","shape","color","I","J","L","O","S","T","Z","randomTetromino","tetrominos","randTetromino","Math","floor","random","useStage","resetPlayer","useState","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","map","row","cell","forEach","value","collided","reduce","acc","findIndex","prev","unshift","push","sweepRows","StyledCell","props","type","Cell","console","log","React","memo","StyledStage","height","width","Stage","StyledDisplay","gameOver","Display","text","StyledStartButton","StartButton","callback","onClick","Tetris","dropTime","setDropTime","setGameOver","setPlayer","rotate","matrix","dir","rotatedTetro","_","index","col","reverse","useCallback","STAGE_WIDTH","clonedPlayer","JSON","parse","stringify","offset","usePlayer","updatePlayerPos","playerRotate","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","useGameStatus","movePlayer","drop","move","keyCode","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","role","tabIndex","onKeyDown","e","onKeyUp","style","background","backgroundSize","overflow","App","className","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f524eac2.chunk.js","sourcesContent":["export const STAGE_WIDTH = 12;\nexport const STAGE_HEIGHT = 20;\n\nexport const createStage = () => {\n  return Array.from(Array(STAGE_HEIGHT), () =>\n    new Array(STAGE_WIDTH).fill([0, \"clear\"])\n  );\n};\n\nexport const checkCollision=(player,stage, {x:moveX, y:moveY})=>{\n    for(let y= 0; y < player.tetromino.length;y +=1){\n        for(let x=0;x < player.tetromino[y].length; x +=1){\n\n\n            //1. check that we're on an actual tetromino cell\n            if(player.tetromino[y][x] !== 0){\n                if(\n                //2. check that out move is inside the game areas height(y)\n                //we should'nt go through the bottom of the play area\n                !stage[y+ player.pos.y + moveY] ||\n                //3/ check that out move is inside the game areas width(x)\n                !stage[y+ player.pos.y + moveY][x + player.pos.x + moveX] ||\n                //4.check that the cell we're moving to isn't set to clear\n                stage[y+ player.pos.y + moveY][x+ player.pos.x + moveX][1] !== 'clear'\n                 ) {\n                        return true;\n                 } \n            }\n        }\n    }\n};","import styled from \"styled-components\";\n// import bgImage from \"/img/bg.png\";\n\nexport const StyledTetrisWrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  \n`;\nexport const StyledTetris = styled.div`\n  display: flex;\n  align-items: flex-start;\n  padding: 40px;\n  margin: 0 auto;\n  max-width: 900px;\n\n  aside {\n    width: 100%;\n    max-width: 200px;\n    display: block;\n    padding: 0 20px;\n  }\n`;\n","export const TETROMINOS = {\n    0: { shape: [[0]], color: '0, 0, 0' },\n    I: {\n      shape: [[0, 'I', 0, 0], [0, 'I', 0, 0], [0, 'I', 0, 0], [0, 'I', 0, 0]],\n      color: '80, 227, 230',\n    },\n    J: { shape: [[0, 'J', 0], [0, 'J', 0], ['J', 'J', 0]], color: '36, 95, 223' },\n    L: {\n      shape: [[0, 'L', 0], [0, 'L', 0], [0, 'L', 'L']],\n      color: '223, 173, 36',\n    },\n    O: { shape: [['O', 'O'], ['O', 'O']], color: '223, 217, 36' },\n    S: { shape: [[0, 'S', 'S'], ['S', 'S', 0], [0, 0, 0]], color: '48, 211, 56' },\n    T: {\n      shape: [[0, 0, 0], ['T', 'T', 'T'], [0, 'T', 0]],\n      color: '132, 61, 198',\n    },\n    Z: { shape: [['Z', 'Z', 0], [0, 'Z', 'Z'], [0, 0, 0]], color: '227, 78, 78' },\n  };\n  \n  export const randomTetromino = () => {\n    const tetrominos = 'IJLOSTZ';\n    const randTetromino =\n      tetrominos[Math.floor(Math.random() * tetrominos.length)];\n    return TETROMINOS[randTetromino];\n  };","import {useState, useEffect} from 'react';\nimport { createStage } from '../gameHelpers';\n\n\nexport const useStage=(player, resetPlayer)=>{\n    const [stage, setStage]= useState(createStage());\n    const [rowsCleared, setRowsCleared]= useState(0);\n\n    const sweepRows= newStage =>\n        newStage.reduce((acc,row)=>{\n            if(row.findIndex(cell => cell[0] === 0) === -1){\n                setRowsCleared(prev => prev +1);\n                acc.unshift(new Array(newStage[0].length).fill([0, 'clear']));\n                return acc;\n            }\n            acc.push(row);\n            return acc;\n        },[]);\n    \n\n    useEffect(()=>{\n        setRowsCleared(0);\n        const updateStage= prevStage=>{\n            //first flush the stage\n            const newStage = prevStage.map(row=> row.map(cell=>(cell[1] === 'clear' ? [0, 'clear'] : cell)));\n\n            //then draw the tetromino\n            player.tetromino.forEach((row, y) => {\n                row.forEach((value, x) => {\n                  if (value !== 0) {\n                    newStage[y + player.pos.y][x + player.pos.x] = [\n                      value,\n                      `${player.collided ? 'merged' : 'clear'}`,\n                    ];\n                  }\n                });\n              });\n              //then check if we collided\n            if(player.collided){\n                resetPlayer();\n                return sweepRows(newStage);\n            }\n\n            return newStage;\n        }\n        setStage(prev => updateStage(prev))\n    },[player, resetPlayer]);\n    return [stage, setStage, rowsCleared];\n}","import styled from 'styled-components';\n\nexport const StyledCell= styled.div`\n    width:auto;\n    background:rgba(${props => props.color}, 0.8);\n    border: ${props=> (props.type === 0 ? '0px solid' : '4px solid')};\n    border-bottom-color: rgba(${props => props.color}, 0.1);\n    border-right-color: rgba(${props => props.color}, 1);\n    border-top-color: rgba(${props => props.color}, 1);\n    border-left-color: rgba(${props => props.color}, 0.3);\n`","import React from 'react';\nimport { StyledCell } from './styles/StyledCell';\nimport { TETROMINOS } from '../tetrominos';\n\nconst Cell=({type})=>{\nreturn(\n    <StyledCell type={type} color={TETROMINOS[type].color}>\n        {console.log('rerender')}\n    </StyledCell>\n)\n};\nexport default React.memo(Cell);","import styled from 'styled-components';\n\nexport const StyledStage= styled.div`\n    display:grid;\n    grid-template-rows:repeat(\n        ${props => props.height},\n        calc(25vw / ${props => props.width})\n    );\n    grid-template-columns: repeat(${props => props.width}, 1fr);\n    grid-gap: 1px;\n    border: 2px solid #333;\n    width:100%;\n    max-width: 25vw;\n    background: #111;\n`;\n","import React from 'react';\nimport Cell from './Cell';\nimport { StyledStage } from './styles/StyledStage';\n\n\n\nconst Stage = ({ stage }) => {\n    return(\n  <StyledStage width={stage[0].length} height={stage.length}>\n    {stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\n  </StyledStage>\n    )\n}\n\n\nexport default Stage;","import styled from 'styled-components';\n\nexport const StyledDisplay = styled.div`\n    box-sizing:border-box;\n    display:flex;\n    align-items:center;\n    margin: 0 0 20px 0;\n    padding:20px;\n    border:4px solid #333;\n    min-height: 30px;\n    width:100%;\n    border-radius:20px;\n    color: ${props => (props.gameOver? 'red' : '#999')};\n    background:#000;\n    font-family: Pixel, Arial, Helvetica, sans-serif;\n    font-size:0.8rem;\n`;","import React from 'react';\nimport { StyledDisplay } from './styles/StyledDisplay';\nconst Display=({gameOver, text})=>{\nreturn(\n    <StyledDisplay gameOver={gameOver}>\n        {text}\n    </StyledDisplay>\n)\n};\nexport default Display;","import styled from 'styled-components';\n\nexport const StyledStartButton = styled.div`\n        box-sizing:border-box;\n        margin:0 0 20px 0;\n        padding:20px;\n        min-height:30px;\n        width:100%;\n        border-radius:20px;\n        border:none;\n        color:white;\n        background:#333;\n        font-family:Pixel, Arial, Helvetica, sans-serif;\n        font-size:1rem;\n        outline:none;\n        cursor:pointer;\n`","import React from 'react';\nimport { StyledStartButton } from './styles/StyledStartButton';\nconst StartButton=({callback})=>{\nreturn(\n    <StyledStartButton onClick={callback}>\n        Start game\n    </StyledStartButton>\n)\n};\nexport default StartButton;","import React, { useState } from 'react';\n\nimport { createStage, checkCollision } from '../gameHelpers';\n\n//styled Components\nimport {StyledTetrisWrapper,  StyledTetris } from './styles/StyledTetris';\n\n//custom hooks\nimport { useGameStatus } from '../hooks/useGameStatus';\nimport { useInterval } from '../hooks/useInterval';\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\n\n\n//Components//\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\nconst Tetris=()=>{\n\n    const [dropTime, setDropTime]= useState(null);\n    const [gameOver, setGameOver]= useState(false);\n\n    const [player, updatePlayerPos, resetPlayer, playerRotate]= usePlayer();\n    const [stage, setStage, rowsCleared]= useStage(player, resetPlayer);\n    const [score, setScore, rows, setRows, level, setLevel]= useGameStatus(rowsCleared);\n    \n\n    console.log('re-render');\n\n    const movePlayer= dir =>{\n        if(!checkCollision(player, stage, {x:dir, y:0})) {\n        updatePlayerPos({x:dir, y:0});\n        };\n    };\n\n    const startGame= ()=>{\n        //Reset everything\n        setStage(createStage);\n        setDropTime(1000);\n        resetPlayer();\n        setGameOver(false);\n        setScore(0);\n        setRows(0);\n        setLevel(0);\n    };\n\n    const drop =()=>{\n        //increase level when player has cleared 10 rows\n        if(rows > (level + 1) * 10){\n            setLevel(prev => prev+1);\n            //also want to increase speed\n            setDropTime(1000/ (level+1) + 200);\n        }\n       \n        if(!checkCollision(player, stage, {x:0, y:1})) {\n        updatePlayerPos({ x:0, y:1, collided:false})\n        }else {\n            //Game Over\n            if(player.pos.y <1){\n                console.log('GAME OVER!!');\n                setGameOver(true);\n                setDropTime(null);\n            }\n            updatePlayerPos({x:0,y:0, collided:true})\n        };\n    };\n\n    const keyUp=({keyCode})=>{\n        \n        if(!gameOver){\n            if(keyCode === 40){\n                console.log('Interval on');\n                setDropTime(1000/ (level+1) + 200);\n            }\n        }\n    }\n\n    const dropPlayer = ()=>{\n        console.log('Interval off');\n        setDropTime(null);\n        drop();\n    };\n\n    const move = ( {keyCode} )=>{\n        if(!gameOver) {\n            if(keyCode === 37){\n                movePlayer(-1);\n            }else if(keyCode === 39){\n                movePlayer(1);\n            } else if(keyCode === 40){\n                dropPlayer();\n            }else if(keyCode === 38){\n                playerRotate(stage,1);\n            }\n        }\n    }\n\n    useInterval(()=>{\n        drop();\n    }, dropTime)\n\n    return(\n        <StyledTetrisWrapper role='button' tabIndex='0' onKeyDown ={e=>move(e)} onKeyUp={keyUp}\n        style={{\n        background: 'url(\"img/bg.png\") #000',\n        backgroundSize: 'cover',\n        overflow: 'hidden',\n    }}\n    >\n        <StyledTetris>\n            <Stage stage={stage}/>\n            <aside>\n                {gameOver ? (\n                    <Display gameOver={gameOver} text=\"Game Over\"/>\n            ) : (\n                <div>\n                    <Display text={`Score: ${score}`}/>\n                    <Display text={`Rows: ${rows}`}/>\n                    <Display text={`Level: ${level}`}/>\n                </div>\n            )}\n            <StartButton callback={startGame}/>\n            </aside>\n            </StyledTetris>\n        </StyledTetrisWrapper>\n)\n};\nexport default Tetris;","import {useState, useCallback} from 'react';\nimport { TETROMINOS, randomTetromino } from '../tetrominos';\nimport {STAGE_WIDTH, checkCollision} from '../gameHelpers';\n\nexport const usePlayer=()=>{\n    const [player,setPlayer]= useState({\n        pos: {x:0, y:0},\n        tetromino: TETROMINOS[0].shape,\n        collided:false,\n    });\n\n    const rotate =(matrix, dir)=>{\n        //Make the rows to become columns(transpose)\n        const rotatedTetro= matrix.map((_,index)=>matrix.map(col=>col[index]));\n        //Reverse each row to get a rotated matrix\n        if(dir >0) return rotatedTetro.map(row => row.reverse());\n        return rotatedTetro.reverse();\n    };\n\n    const playerRotate=(stage, dir)=>{\n        const clonedPlayer= JSON.parse(JSON.stringify(player));\n        clonedPlayer.tetromino= rotate(clonedPlayer.tetromino, dir);\n\n        const pos= clonedPlayer.pos.x;\n        let offset=1;\n        while(checkCollision(clonedPlayer,stage,{x:0, y:0})){\n            clonedPlayer.pos.x += offset;\n            offset = -(offset + (offset > 0 ? 1 : -1));\n            if(offset > clonedPlayer.tetromino[0].length){\n                rotate(clonedPlayer.tetromino, -dir);\n                clonedPlayer.pos.x = pos;\n                return;\n            }\n        }\n\n        setPlayer(clonedPlayer);\n\n    }\n\n    const updatePlayerPos= ({x,y,collided})=>{\n        setPlayer(prev=>({\n            ...prev,\n            pos: {x: (prev.pos.x += x), y: (prev.pos.y += y)},\n            collided,\n        }))\n    };\n\n    const resetPlayer = useCallback(()=> {\n        setPlayer({\n            pos: { x: STAGE_WIDTH / 2 -2,y:0},\n            tetromino:randomTetromino().shape,\n            collided:false,\n        })\n    }, [])\n\n    return  [player, updatePlayerPos, resetPlayer, playerRotate];\n}","import {useState, useEffect, useCallback} from 'react';\n\nexport const useGameStatus=(rowsCleared)=>{\n    const [score, setScore]=useState(0);\n    const [rows, setRows]=useState(0);\n    const [level, setLevel]= useState(0);\n\n    const linePoints= [40,100,300,1200];\n\n    const calcScore= useCallback(()=>{\n        //we have score\n        if(rowsCleared > 0){\n            //this is how original Tetris score is calculated\n            setScore(prev => prev + linePoints[rowsCleared -1] * (level +1))\n            setRows(prev => prev + rowsCleared);\n        \n        }\n    },[level, linePoints, rowsCleared])\n\n    useEffect(()=>{\n        calcScore();\n    },[calcScore, rowsCleared, score])\n    return [score, setScore,rows, setRows, level, setLevel]\n}","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}","import React from \"react\";\nimport Tetris from \"./components/Tetris\";\n\nconst App = () => {\n  return(\n  <div className=\"App\">\n    <Tetris/>\n  </div>\n  )\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  \n    <App />,\n  \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}